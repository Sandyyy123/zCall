zCall: A Rare Variant Caller for Array-Based Genotyping
(Extended version)

1. Overview

zCall is a rare variant caller for array-based genotyping. This document focuses on the version-controlled scripts in the 'src' directory of zCall on github. For details on other implementations of zCall, see Section 6 (History).

2. Installation

Use GNU Make and the Makefile, with the target 'install'. For example, 'make install /home/jsmith/foo' will create a directory /home/jsmith/foo/zCall and install the relevant scripts and documentation. 

Parameters in the etc/config.ini file will require editing to reflect the user's local computing environment. 

Software prerequisites are:
- Python 2.7.x
- R 2.x

3. The zCall method

Applying zCall consists of four steps:
  1. Generate candidate zscore threshold files
  2. Evaluate metrics on the input data for each candidate threshold
  3. Merge evaluation results and choose an optimal threshold for calling
  4. Apply zCall using the chosen threshold to recall any 'no-calls' in the input data.

4. Usage

Two approaches are supported:
  1. A self-contained script to run zCall from start to finish as a single process:  zCallComplete.py
  2. Scripts to run each step independently, to enable parallelization.  Scripts corresponding to steps 1-4 respectively are: prepareThresholds.py, evaluateThresholds.py, mergeEvaluation.py, runZCall.py

Any of these scripts can be run with -h or --help for detailed help and usage information.

The WTSI Genotyping Pipeline includes support for zCall as part of a fully-integrated pipeline workflow, with parallel processing on LSF. See: https://github.com/wtsi-npg/genotyping

5. Other Python scripts and modules

Modules containing relevant classes but not intended to be run as scripts: BPM.py, calibration.py, EGT.py, GTC.py, plink.py, utilities.py

Original zCall scripts, with .py filename extension omitted to prevent automatic import: findMeanSD, findThresholds

Additional command-line scripts, run with -h or --help for usage: createDocs.py, plinkEquivalenceTest.py

6. Data formats

Input data consists of binary .GTC files, one for each sample. In addition, zCall requires an appropriate .egt cluster file and .bpm.csv manifest file for the Illumina beadchip being processed.

Final genotype output is in Plink binary format (see http://pngu.mgh.harvard.edu/~purcell/plink/data.shtml).  Intermediate metadata files are written in JSON, a simple text-based format for storing data structures (see http://www.json.org/).

6. History

The zCall method was originally developed by Jackie Goldstein (jigold@broadinstitute.org) et al. and published in the following paper:
Goldstein JI, Crenshaw A, Carey J, Grant GB, Maguire J, Fromer M, O'Dushlaine C, Moran JL, Chambert K, Stevens C; Swedish Schizophrenia Consortium; ARRA Autism Sequencing Consortium, Sklar P, Hultman CM, Purcell S, McCarroll SA, Sullivan PF, Daly MJ, Neale BM. zCall: a rare variant caller for array-based genotyping: Genetics and population analysis. Bioinformatics. 2012 Oct 1;28(19):2543-2545. Epub 2012 Jul 27. PubMed PMID: 22843986.

zCall has been substantially extended by Iain Bancarz (ib5@sanger.ac.uk) for use in the WTSI Genotyping Pipeline (https://github.com/wtsi-npg/genotyping). The extension includes metrics for evaluation of the 'zscore' threshold parameter, implementation of zCall in a fully automated pipeline, and support for Plink binary output. 